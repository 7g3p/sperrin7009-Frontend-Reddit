{"version":3,"sources":["Data/menuItems.js","Components/nav.js","Components/layout.js","Components/searchResultDropdown.js","favourites.js","Components/postCard.js","Components/postListings.js","search.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItems","title","url","NavBar","className","href","rel","map","item","index","style","fontFamily","to","Layout","props","children","SearchResDropDown","result","search","setSubreddit","setSearch","length","role","child","onClick","data","display_name_prefixed","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","String","prototype","replaceAt","replacement","this","substr","FavouritePosts","useState","postList","setPostList","useEffect","async_","postUrls","postsArr","tpArr","localStorage","getItem","split","i","query","fetch","then","res","json","resJSON","catch","error","console","log","Window","alert","FetchFavouritePosts","PostCard","postChild","hover","setHover","defaultKeyName","count","localeCompare","toString","join","RenderMedia","secure_media","undefined","oembed","htmlString","html","match","replace","decodeURIComponent","allowFullScreen","src","permalink","width","thumbnail_width","height","thumbnail_height","thumbnail_url","reddit_video","fallback_url","post_hint","alt","preview","score","toFixed","author","subreddit_name_prefixed","icon","faSolidHeart","faEmptyHeart","onPointerOver","onPointerOut","PostList","SearchSubreddits","subreddit","setQuery","searchResults","setSearchResults","searchURL","baseURL","status","id","placeholder","value","onChange","target","faSearch","aria-orientation","aria-labelledby","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79f75eac.chunk.js","sourcesContent":["export const MenuItems = [\n    {\n        title: \"Favourites\",\n        url: \"/favourites\",\n    },\n    {\n        title: \"Search\",\n        url: \"/search\",\n    }\n]","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { MenuItems } from '../Data/menuItems.js';\n\nconst NavBar = () => {\n\n\n    return(\n        <nav\n      className=\"sticky top-0 shadow-lg bg-gradient-to-r from-green-400 to-red-400\n       sm:pl-4 sm:pr-5 sm:py-2.5 z-10\"\n    >\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lobster&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <div className=\"mx-auto text-white sm:max-w-screen-lg sm:flex sm:justify-between\">\n        <div className=\"flex items-center justify-between py-2 pl-4 pr-2 sm:p-0\">\n          <div className=\"flex items-center\">\n            <h1>Saved Reddit Posts</h1>\n          </div>\n          <div className=\"sm:hidden\">\n            <button\n              className=\"block px-4 transition-all duration-500 ease-in-out rounded cursor-pointer focus:outline-none hover:bg-purple-300 \"\n            >\n            </button>\n          </div>\n        </div>\n        <div\n          className=\"transform transition duration-500 ease-in-out px-4 pt-2 pb-4 sm:flex sm:p-0\"\n        >\n          {MenuItems.map((item, index) => {\n            return (\n              <Link\n                key={index}\n                style={{ fontFamily: \"Fredoka One, cursive\" }}\n                className={`${\n                  index === 0 ? \"mt-0\" : \"mt-2\"\n                } block font-medium rounded px-2 py-1 transition-all duration-500 ease-in-out hover:bg-purple-300 sm:font-normal sm:mt-0 sm:ml-2 `}\n                to={item.url}\n              >\n                {item.title}\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </nav>\n    );\n};\n\nexport default NavBar;","import NavBar from \"./nav.js\";\n\nconst Layout = (props) => {\n  return (\n    <div className=\"relative min-h-screen\">\n        <NavBar />\n        <main className=\"pb-32 mx-auto sm:max-w-screen-lg\">{props.children}</main>\n    </div>\n  );\n};\n\nexport default Layout;","import React from 'react';\n\n\nexport const SearchResDropDown = ({result, search, setSubreddit, setSearch}) => {\n\n    if (result.length <= 0){\n        return(<div></div>);\n    }\n    else {\n        if (search === \"\")\n        {\n            return(<div></div>);\n        }\n        return(\n            <div className=\"static py-1\" role=\"none\">\n                {result.map((child, index) => {\n                    return(\n                    <button key={child.data.display_name_prefixed} onClick={() => {setSearch(\"\"); setSubreddit(child.data.display_name_prefixed);}}\n                    className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 cursor-pointer\" \n                    role=\"menuitem\"\n                    >{child.data.display_name_prefixed}</button>\n                    )\n                    \n                })}\n            </div>\n        );\n    }\n}","import React, { useState, useEffect } from 'react';\nimport PostList from './Components/postListings.js';\n\nexport function storageAvailable(type) {\n    var storage;\n    try {\n        storage = window[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch(e) {\n        return e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n}\n\nString.prototype.replaceAt = function(index, replacement) {\n    return this.substr(0, index) + replacement + this.substr(index + replacement.length);\n}\n\nconst FavouritePosts = () => {\n    const defaultKeyName = \"FavPost\";\n    const [postList, setPostList] = useState([]);\n\n    useEffect(() => {\n        const FetchFavouritePosts = async_ => {\n            let postUrls = null;\n            let postsArr = [];\n            let tpArr = [];\n            \n            if (storageAvailable('localStorage')) {\n                postUrls = localStorage.getItem(defaultKeyName);\n\n                if (postUrls !== null){\n                    postsArr = postUrls.split(\"}{\");\n\n                    for (let i = 1; i < postsArr.length;i++){\n                        let query = \"\";\n\n                        query = postsArr[i].replaceAt(postsArr[i].length - 1, \".json\");\n\n                        fetch(query)\n                        .then((res) => {\n                            res.json()\n                            .then((resJSON) => {\n                                tpArr = [...tpArr, resJSON[0].data.children[0]];\n\n                                setPostList(tpArr);\n                            })\n                        })\n                        .catch((error) => {\n                            console.log(\"***ERROR: \" + error);\n                        })\n                    }\n                }\n            }\n            else {\n                Window.alert(\"LocalStorage is not available.\");\n            }\n        }\n\n        FetchFavouritePosts();\n    }, []);\n\n    return (\n        <div>\n            <PostList \n            postList={postList}\n            />\n        </div>\n    );\n};\n\nexport default FavouritePosts;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { storageAvailable } from '../favourites.js';\nimport { faHeart as faSolidHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as faEmptyHeart } from \"@fortawesome/free-regular-svg-icons\";\n\nconst PostCard = ({postChild}) => {\n    const [hover, setHover] = useState(false);\n    const defaultKeyName = \"FavPost\";\n    let postUrls;\n    let postsArr = [];\n\n    const FavouritePosts = (url) => {\n\n        if (storageAvailable('localStorage')) {\n            // Pulls the current favourites list from the localStorage\n            postUrls = localStorage.getItem(defaultKeyName);\n\n            if (postUrls !== null){\n                postsArr = postUrls.split(\"}{\");\n\n                let count = 0;\n                for(let i = 0; i < postsArr.length;i++){\n                    if (postsArr[i].localeCompare(url) !== 0)\n                    {\n                        if (count === postsArr.length - 1){\n                            postsArr = [...postsArr, url.toString()];\n                            i++;\n                        }\n                        else{\n                            count++;\n                        }\n                    }\n                }\n\n                // Save the new favourites list to localStorage\n                localStorage.setItem(defaultKeyName, postsArr.join(\"}{\"));\n            }\n        }\n        else {\n            window.alert(\"LocalStorage is not available.\");\n        }\n            window.alert(\"Post saved to favourites.\");\n    }\n\n    const RenderMedia = () => {\n        if (postChild.data.secure_media !== null){\n            if (postChild.data.secure_media.oembed !== undefined)\n            {\n                var htmlString = postChild.data.secure_media.oembed.html;\n\n                // A lot of stuff to extract the url from the html string because i couldn't find a regular url in the json(the url element just had \"www.streamable.com\" and nothing else so :/)\n                htmlString = htmlString.match(/(\\s(src=\").*?(\" )\\b)/g);\n\n                if(null !== htmlString.toString().match(/((src=)\\b.+?(?=\\&))/g))\n                {\n                    htmlString = htmlString.toString().match(/((src=)\\b.+?(?=\\&))/g);\n                \n                    htmlString = htmlString.toString().replace(\"src=\", \"\");\n                    htmlString = decodeURIComponent(htmlString);\n\n                    return <iframe title={postChild.data.title} className=\"block max-h-96 w-full\" allowFullScreen={true} src={htmlString}/>;\n                }\n                else {\n                    return (\n                        <a href={\"https://www.reddit.com\" + postChild.data.permalink}>\n                            <iframe \n                            title={postChild.data.title} \n                            className=\"block max-h-96 w-full hover:cursor-pointer\" \n                            allowFullScreen={true} \n                            width={postChild.data.secure_media.oembed.thumbnail_width} \n                            height={postChild.data.secure_media.oembed.thumbnail_height} \n                            src={postChild.data.secure_media.oembed.thumbnail_url}/>\n                        </a>\n                        )\n                }\n            }\n            else{\n                return(\n                    <iframe title={postChild.data.title} className=\"block max-h-96 w-full cursor-pointer\" height={postChild.data.secure_media.reddit_video.height} width={postChild.data.secure_media.reddit_video.width} src={postChild.data.secure_media.reddit_video.fallback_url}/>\n                );\n            }\n        }\n        else if(postChild.data.post_hint.toString().localeCompare(\"link\") === 0){\n            return(\n                <a href={\"https://www.reddit.com\" + postChild.data.permalink}>\n                    <iframe title={postChild.data.title} alt=\"Placeholder\" className=\"h-auto w-full hidden hover:block cursor-pointer\" />\n                </a>\n            );\n        }\n        else{\n            return (\n                <a href={\"https://www.reddit.com\" + postChild.data.permalink}>\n                    <img alt=\"Placeholder\" className=\"block h-auto w-full cursor-pointer\" src={postChild.data.url}/>\n                </a>\n            );\n        }\n    }\n\n    if (postChild.length <= 0){\n        return(<div></div>);\n    }\n    else {\n        if (postChild.data.preview === undefined)\n        {\n            return(\n            <article className=\"m-5 overflow-hidden rounded-lg shadow-lg\">\n                <header className=\"max-h-80 flex items-center justify-between leading-tight p-2 md:p-4 bg-purple-200\">\n                    <h1 className=\"text-lg max-h-52 overflow-hidden\">\n                        <a href={\"https://www.reddit.com\" + postChild.data.permalink} className=\"no-underline hover:underline text-black cursor-pointer\">\n                            {postChild.data.title}\n                        </a>\n                    </h1>\n                    <p className=\"flex items-end text-grey-darker text-sm\">\n                        {(postChild.data.score / 1000).toFixed(1) + \"K\"}\n                    </p>\n                </header>\n\n                <footer className=\"flex items-center justify-between leading-none p-2 md:p-4 bg-purple-200\">\n                    <a href={\"https://www.reddit.com\" + postChild.data.permalink} className=\"flex flex-col max-h-12 items-center no-underline hover:underline text-black\">\n                        <p className=\"ml-2 mb-2 text-sm font-semibold\">\n                            {\"u/\" + postChild.data.author}\n                        </p>\n                        <p className=\"ml-2 -mb-2 text-xs font-thin text-gray-800\">\n                            {postChild.data.subreddit_name_prefixed}\n                        </p>\n                    </a>\n                        <a className=\"no-underline text-grey-darker hover:text-red-dark\">\n                        <span className=\"hidden\">Like</span>\n                        <FontAwesomeIcon \n                        icon={!hover ? faEmptyHeart : faSolidHeart} \n                        onPointerOver={() => {setHover(true);}} \n                        onPointerOut={() => {setHover(false);}} \n                        onClick={() => {FavouritePosts((\"https://www.reddit.com\" + postChild.data.permalink))}}\n                        />\n                    </a>\n                </footer>\n\n            </article>\n            );\n        }\n        else{\n            return(\n            <article className=\"m-5 overflow-hidden rounded-lg shadow-lg\">\n                <RenderMedia />\n                <link rel=\"canonical\" href=\"https://getbootstrap.com/docs/4.0/examples/blog/\"/>\n\n                <header className=\"flex items-center justify-between leading-tight p-2 md:p-4 bg-purple-200\">\n                    <h1 className=\"text-lg max-h-20 overflow-hidden\">\n                        <a className=\"no-underline hover:underline text-black\" href={\"https://www.reddit.com\" + postChild.data.permalink}>\n                            {postChild.data.title}\n                        </a>\n                    </h1>\n                    <p className=\"text-grey-darker text-sm cursor-default\">\n                        {(postChild.data.score / 1000).toFixed(1) + \"K\"}\n                    </p>\n                </header>\n\n                <footer className=\"flex items-center justify-between leading-none p-2 md:p-4 bg-purple-200 cursor-default\">\n                    <a href={\"https://www.reddit.com\" + postChild.data.permalink} className=\"flex flex-col max-h-12 items-center no-underline hover:underline text-black cursor-default\">\n                        <p className=\"ml-2 mb-2 text-sm font-semibold cursor-default\">\n                            {\"u/\" + postChild.data.author}\n                        </p>\n                        <p className=\"ml-2 -mb-2 text-xs font-thin text-gray-800 cursor-default\">\n                            {postChild.data.subreddit_name_prefixed}\n                        </p>\n                    </a>\n                    <a className=\"no-underline text-grey-darker hover:text-red-dark\">\n                        <span className=\"hidden\">Like</span>\n                        <FontAwesomeIcon \n                        icon={!hover ? faEmptyHeart : faSolidHeart} \n                        onPointerOver={() => {setHover(true);}} \n                        onPointerOut={() => {setHover(false);}} \n                        onClick={() => {FavouritePosts((\"https://www.reddit.com\" + postChild.data.permalink))}}\n                        />\n                    </a>\n                </footer>\n\n            </article>\n            );\n        }\n    }\n}\n\nexport default PostCard;","import React from 'react';\nimport PostCard from './postCard.js';\n\nconst PostList = ({postList}) => {\n\n    return(\n        <div className=\"flex justify-center flex-wrap mx-100 lg:mx-4\">\n            <div className=\"my-1 px-1 w-full md:w-1/2 lg:px-4 lg:w-3/6\">\n                {postList.map((postChild, index) => {\n                    return(\n                        <PostCard \n                        key={index}\n                        postChild={postChild} \n                        />\n                    )\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default PostList;","import React, {useState, useEffect} from 'react';\nimport {SearchResDropDown} from './Components/searchResultDropdown.js';\nimport PostList from './Components/postListings.js';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch} from '@fortawesome/free-solid-svg-icons';\n\nconst SearchSubreddits = () => {\n    const [subreddit, setSubreddit] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [search, setSearch] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    const [postList, setPostList] = useState([]);\n    const searchURL = `subreddits/search.json?q=${query}&limit=10`\n    const postListingURL = `/hot.json?limit=10`;\n    const baseURL = `https://www.reddit.com/`;\n\n    // Consistently update query string to match what is written\n    useEffect(() =>{\n        setQuery(search);\n    });\n\n    // Update when the query string has been updated and fetch the search results\n    useEffect(() => {\n        fetch(baseURL + searchURL)\n        .then((res) => {\n            res.json().then((data) => {\n                if (data.data !== undefined){\n                    setSearchResults(data.data.children);\n                }\n            });\n        })\n        .catch((error) => {\n            console.log(\"***ERROR: \" + error);\n        })\n    }, [query])\n\n    useEffect(() => {\n        fetch(baseURL + subreddit + postListingURL)\n        .then((res) => {\n            if (res.status === 403 || res.status === 404)\n            {\n                window.alert((baseURL + subreddit) + \" cannot be reach. Try a different subreddit.\");\n            }\n            res.json().then((data) => {\n                if (data.data !== undefined){\n                    setPostList(data.data.children);\n                    console.log(data);\n                }\n            })\n            .catch((error) => {\n                console.log(\"****ERROR: \" + error);\n            });\n        })\n        .catch((error) => {\n            console.log(\"***ERROR: \" + error);\n        });\n    }, [subreddit]);\n\n    // Update the value of the searchbar search string\n    const changeValueHandler = (e) => {\n        setSearch(e.target.value);\n    }\n\n    return(\n        <div>\n            <div className=\"flex sticky top-12 items-center rounded-full shadow-xl\">\n                <input \n                className=\"rounded-l-full w-full py-4 px-6 text-gray-700 leading-tight focus:outline-none\" \n                id=\"search\" \n                type=\"text\" \n                placeholder=\"Search\"\n                value={search}\n                onChange={changeValueHandler}\n                />\n                <div className=\"p-4\">\n                    <button className=\"bg-blue-500 text-white rounded-full p-2 hover:bg-blue-400 focus:outline-none w-12 h-12 flex items-center justify-center\">\n                        <FontAwesomeIcon icon={faSearch}/>\n                    </button>\n                </div>\n\n                <div \n                className=\"absolute origin-top-right top-20 left-0 ml-10 mt-0.5 w-3/6 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\" \n                role=\"menu\" \n                aria-orientation=\"vertical\" \n                aria-labelledby=\"options-menu\"\n                >\n                    <SearchResDropDown \n                    result={searchResults} \n                    search={search}\n                    setSubreddit={setSubreddit} \n                    setSearch={setSearch}\n                    />\n                </div>\n            </div>\n\n            \n\n            <PostList \n            postList={postList}\n            />\n        </div>\n    );\n};\n\nexport default SearchSubreddits;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Layout from './Components/layout.js';\nimport SearchSubreddits from './search.js';\nimport FavouritePosts from './favourites.js';\nimport \"tailwindcss/tailwind.css\"\nimport './App.css';\n\nfunction App() {\n\n  return (\n      <HashRouter>\n      <Layout>\n          <Route path=\"/favourites\" component={FavouritePosts}/>\n          <Route path=\"/search\" component={SearchSubreddits}/>\n        </Layout>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}